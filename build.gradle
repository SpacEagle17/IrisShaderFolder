plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'dev.architectury.loom' version '1.4-SNAPSHOT'
    // Add this plugin for jar-in-jar capability
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

version = mod_version
group = mod_group_id

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

base {
    archivesName = "iris_shader_folder"
}

loom {
    silentMojangMappingsLicense()
    
    forge {
        mixinConfigs = ["iris_shader_folder.mixins.json"]
        
        // Add this to help with multi-version compatibility
        dataGen {
            mod(mod_id)
        }
    }
    
//     // This helps with multi-version compatibility
//     runs {
//         client {
//             client()
//             setConfigName("Minecraft Client")
//             workingDirectory project.file('run')
//             property 'forge.logging.markers', 'REGISTRIES'
//             property 'forge.logging.console.level', 'debug'
            
//             mods {
//                 iris_shader_folder {
//                     source(sourceSets.main)
//                 }
//             }
//         }
        
//         server {
//             server()
//             setConfigName("Minecraft Server")
//             workingDirectory project.file('run')
//             property 'forge.logging.markers', 'REGISTRIES'
//             property 'forge.logging.console.level', 'debug'
            
//             mods {
//                 iris_shader_folder {
//                     source(sourceSets.main)
//                 }
//             }
//         }
//     }
}

// mixin {
//     add sourceSets.main, "iris_shader_folder.mixins.json"
//     config "iris_shader_folder.mixins.json"
// }

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'SpongePowered'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

configurations {
    jarJar
    implementation.extendsFrom jarJar
}

dependencies {
    // Split minecraft and forge dependencies
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    
    // Include Mixin annotation processor
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation 'org.spongepowered:mixin:0.8.5'

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.5.0"))
    jarJar("io.github.llamalad7:mixinextras-forge:0.5.0")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
        minecraft_version      : minecraft_version,
        minecraft_version_range: minecraft_version_range,
        forge_version          : forge_version,
        forge_version_range    : forge_version_range,
        loader_version_range   : loader_version_range,
        mod_id                 : mod_id,
        mod_name               : mod_name,
        mod_license            : mod_license,
        mod_version            : mod_version,
        mod_authors            : mod_authors,
        mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching('META-INF/mods.toml') {
        expand replaceProperties
    }
}

jar {
    // Remove finalizedBy 'reobfJar' as Loom handles this differently
    
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    manifest {
        attributes([
            "Specification-Title": mod_id,
            "Specification-Vendor": mod_authors,
            "Specification-Version": "1",
            "Implementation-Title": mod_name,
            "Implementation-Version": mod_version,
            "Implementation-Vendor": mod_authors,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "iris_shader_folder.mixins.json"
        ])
    }
}